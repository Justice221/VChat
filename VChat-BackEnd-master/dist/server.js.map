{"version":3,"sources":["../src/server.js"],"names":["express","cors","server","socketIO","v4","uuidV4","app","serve","Server","io","port","process","env","PORT","use","json","urlencoded","extended","get","req","res","send","link","on","socket","roomID","userID","console","log","join","to","broadcast","emit","createServer","listen"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,OAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAMC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,MAAMN,SAAZ;AACA,MAAMO,QAAQL,OAAOM,MAAP,CAAcF,GAAd,CAAd;AACA,MAAMG,KAAKN,SAASI,KAAT,CAAX;AACA,MAAMG,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEA;AACAP,IAAIQ,GAAJ,CAAQb,MAAR;AACAK,IAAIQ,GAAJ,CAAQd,QAAQe,IAAR,EAAR;AACAT,IAAIQ,GAAJ,CAAQd,QAAQgB,UAAR,CAAmB,EAAEC,UAAU,IAAZ,EAAnB,CAAR;;AAEAX,IAAIY,GAAJ,CAAQ,OAAR,EAAiB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3BA,QAAIC,IAAJ,CAAS,EAAEC,MAAMjB,QAAR,EAAT;AACH,CAFD;;AAIA;AACA;;AAEAI,GAAGc,EAAH,CAAM,YAAN,EAAoBC,UAAU;AAC1BA,WAAOD,EAAP,CAAU,WAAV,EAAuB,CAACE,MAAD,EAASC,MAAT,KAAoB;AACvCC,gBAAQC,GAAR,CAAY,iBAAZ,EAA+BH,MAA/B;AACAD,eAAOK,IAAP,CAAYJ,MAAZ;AACAD,eAAOM,EAAP,CAAUL,MAAV,EAAkBM,SAAlB,CAA4BC,IAA5B,CAAiC,kBAAjC,EAAqDN,MAArD;AACAF,eAAOD,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC1BC,mBAAOM,EAAP,CAAUL,MAAV,EAAkBM,SAAlB,CAA4BC,IAA5B,CAAiC,mBAAjC,EAAsDN,MAAtD;AACH,SAFD;AAGH,KAPD;AAQH,CATD;;AAWA;AACA;AACA;AACA;AACA;AACA;AACAxB,OAAO+B,YAAP,CAAoB,EAApB,EAAwB,CAACd,GAAD,EAAMC,GAAN,KAAc;AAClCO,YAAQC,GAAR,CAAa,yBAAwBlB,IAAK,EAA1C;AACH,CAFD,EAEGwB,MAFH,CAEUxB,IAFV","file":"server.js","sourcesContent":["import express from 'express';\nimport cors from 'cors';\nimport server from 'https';\nimport socketIO from 'socket.io';\nimport { v4 as uuidV4 } from 'uuid';\n\nconst app = express();\nconst serve = server.Server(app);\nconst io = socketIO(serve);\nconst port = process.env.PORT || 5000;\n\n// Middlewares\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\napp.get('/join', (req, res) => {\n    res.send({ link: uuidV4() });\n});\n\n// app.use(express.static('public'));\n// app.set('view engine', 'ejs');\n\nio.on('connection', socket => {\n    socket.on('join-room', (roomID, userID) => {\n        console.log('Joinned in Room', roomID);\n        socket.join(roomID);\n        socket.to(roomID).broadcast.emit('new-user-connect', userID);\n        socket.on('disconnect', () => {\n            socket.to(roomID).broadcast.emit('user-disconnected', userID);\n        })\n    })\n})\n\n// Server listen initilized\n// serve.listen(port, () => {\n//     console.log(`Listening on the port ${port}`);\n// }).on('error', e => {\n//     console.error(e);\n// });\nserver.createServer({}, (req, res) => {\n    console.log(`Listening on the port ${port}`);\n}).listen(port)"]}